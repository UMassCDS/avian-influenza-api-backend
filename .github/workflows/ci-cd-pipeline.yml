name: CI/CD Pipeline - Avian Influenza API

on:
  # Trigger on pull requests to the main branch
  pull_request:
    branches: [main]

  # Trigger on push (merge) to the main branch
  push:
    branches: [main]

jobs:
  # CI Job: Build (without tests)
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.1.x'  # Or your desired R version

      - name: Install Dependencies
        run: R --no-restore -e 'install.packages("plumber", repos="https://cloud.r-project.org")'  # Add other dependencies if needed

      - name: Build Docker Image
        run: docker build -t umasscds/avian-flu-infra:latest .

      # Docker Login to Docker Hub
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push umasscds/avian-flu-infra:latest

  # CD Job: Deploy to EC2 (only runs on successful merge to main)
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      # Pull the latest Docker image from Docker Hub
      - name: Pull Docker Image from Docker Hub
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "docker pull umasscds/avian-flu-infra:latest"

      # Stop and Remove Old Container (if running)
      - name: Stop and Remove Old Container (if running)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "docker stop avian-flu-api && docker rm avian-flu-api || true"

      # Run New Docker Container
      - name: Run New Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "docker run -d -p 8000:8000 --name avian-flu-api umasscds/avian-flu-infra:latest"

      - name: Report Deployment Success
        run: echo "Successfully deployed the latest code to EC2!"
